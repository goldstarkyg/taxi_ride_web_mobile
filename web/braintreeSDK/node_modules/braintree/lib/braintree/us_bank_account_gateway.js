//@ sourceMappingURL=us_bank_account_gateway.map
// Generated by CoffeeScript 1.6.1
var Gateway, TransactionGateway, UsBankAccount, UsBankAccountGateway, exceptions,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Gateway = require('./gateway').Gateway;

UsBankAccount = require('./us_bank_account').UsBankAccount;

TransactionGateway = require('./transaction_gateway').TransactionGateway;

exceptions = require('./exceptions');

UsBankAccountGateway = (function(_super) {

  __extends(UsBankAccountGateway, _super);

  function UsBankAccountGateway(gateway) {
    this.gateway = gateway;
    this.config = this.gateway.config;
  }

  UsBankAccountGateway.prototype.find = function(token, callback) {
    if (token.trim() === '') {
      return callback(exceptions.NotFoundError("Not Found"), null);
    } else {
      return this.gateway.http.get("" + (this.config.baseMerchantPath()) + "/payment_methods/us_bank_account/" + token, function(err, response) {
        if (err) {
          return callback(err, null);
        } else {
          return callback(null, new UsBankAccount(response.usBankAccount));
        }
      });
    }
  };

  UsBankAccountGateway.prototype.sale = function(token, transactionRequest, callback) {
    transactionRequest.paymentMethodToken = token;
    if (!transactionRequest.options) {
      transactionRequest.options = {};
    }
    transactionRequest.options.submitForSettlement = true;
    return new TransactionGateway(this.gateway).sale(transactionRequest, callback);
  };

  return UsBankAccountGateway;

})(Gateway);

exports.UsBankAccountGateway = UsBankAccountGateway;
