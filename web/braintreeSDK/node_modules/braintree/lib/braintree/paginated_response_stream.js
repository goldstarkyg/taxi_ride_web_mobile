//@ sourceMappingURL=paginated_response_stream.map
// Generated by CoffeeScript 1.6.1
var PaginatedResponseStream, Readable,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Readable = require('stream').Readable || require('readable-stream').Readable;

PaginatedResponseStream = (function(_super) {

  __extends(PaginatedResponseStream, _super);

  function PaginatedResponseStream(paginatedResponse) {
    PaginatedResponseStream.__super__.constructor.call(this, {
      objectMode: true
    });
    this.paginatedResponse = paginatedResponse;
    this.pageSize = 0;
    this.currentPage = 0;
    this.index = 0;
    this.totalItems = 0;
    this.items = [];
  }

  PaginatedResponseStream.prototype.nextItem = function() {
    var _this = this;
    if (this.currentPage === 0 || this.index % this.pageSize === 0) {
      this.currentPage++;
      return this.paginatedResponse.pagingFunction(this.currentPage, function(err, totalItems, pageSize, items) {
        if (err != null) {
          _this.emit('error', err);
          return;
        }
        _this.totalItems = totalItems;
        _this.pageSize = pageSize;
        _this.items = items;
        _this.index++;
        return _this.push(_this.items.shift());
      });
    } else if (this.index >= this.totalItems) {
      return this.push(null);
    } else {
      this.index++;
      return this.push(this.items.shift());
    }
  };

  PaginatedResponseStream.prototype.ready = function() {
    this.readyToStart = true;
    return this.emit('ready');
  };

  PaginatedResponseStream.prototype._read = function() {
    var _this = this;
    if (this.readyToStart != null) {
      return this.nextItem();
    } else {
      return this.on('ready', function() {
        return _this.nextItem();
      });
    }
  };

  return PaginatedResponseStream;

})(Readable);

exports.PaginatedResponseStream = PaginatedResponseStream;
